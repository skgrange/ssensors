% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_with_sensor_id.R
\name{import_with_sensor_id}
\alias{import_with_sensor_id}
\alias{import_reference_cylinders}
\alias{import_cylinder_deployments}
\alias{import_observations_calibrations}
\alias{import_cylinder_test_summaries}
\alias{import_sensor_deployments}
\alias{import_calibration_coefficients}
\alias{import_sensing_elements}
\alias{import_observation_flags}
\alias{import_cylinder_exclusion_periods}
\alias{import_sensors}
\alias{import_sensor_types}
\alias{import_invalid_date_ranges}
\alias{import_validity_types}
\alias{import_model_objects}
\alias{import_raster_objects}
\alias{import_observation_flagging_conditions}
\alias{import_generic_observations}
\alias{import_icos_cities_variables}
\alias{import_sensors_intercomparison_periods}
\alias{import_sensors_humidity_tests}
\title{Functions to import data from an extended sensors \strong{smonitor} database.}
\usage{
import_with_sensor_id(
  con,
  process,
  summary = NA,
  start = 1969,
  end = NA,
  site_name = TRUE,
  valid_only = FALSE,
  set_invalid_values = FALSE,
  warn = FALSE,
  query_by_process = TRUE,
  tz = "UTC",
  progress = FALSE
)

import_reference_cylinders(con, tz = "UTC")

import_cylinder_deployments(con, add_extras = TRUE, tz = "UTC")

import_observations_calibrations(con, tz = "UTC")

import_cylinder_test_summaries(con, tz = "UTC")

import_sensor_deployments(con, add_extras = TRUE, tz = "UTC")

import_calibration_coefficients(con, tz = "UTC")

import_sensing_elements(con, tz = "UTC")

import_observation_flags(con)

import_cylinder_exclusion_periods(con, tz = "UTC")

import_sensors(con)

import_sensor_types(con)

import_invalid_date_ranges(con, tz = "UTC")

import_validity_types(con)

import_model_objects(con, add_extras = TRUE)

import_raster_objects(con, tz = "UTC")

import_observation_flagging_conditions(con)

import_generic_observations(con, tz = "UTC")

import_icos_cities_variables(con)

import_sensors_intercomparison_periods(con, tz = "UTC")

import_sensors_humidity_tests(con, tz = "UTC")
}
\arguments{
\item{con}{Database connection to a ssensors \strong{smonitor} database.}

\item{process}{A vector of processes. If a data frame/tibble is passed 
containing a variable called \code{process}, this vector will be extracted 
and used.}

\item{summary}{A vector of summaries.}

\item{start}{What is the start date of data to be returned? Ideally, the 
date format should be \code{yyyy-mm-dd}, but the UK locale convention of 
\code{dd/mm/yyyy} will also work. Years as strings or integers work too and
will floor-rounded.}

\item{end}{What is the end date of data to be returned? Ideally, the 
date format should be \code{yyyy-mm-dd}, but the UK locale convention of 
\code{dd/mm/yyyy} will also work. Years as strings or integers work too and 
will be ceiling-rounded.}

\item{site_name}{Should the return include the \code{site_name} variable? 
Default is \code{TRUE}.}

\item{valid_only}{Should invalid observations be filtered out? Default is 
\code{TRUE}. Valid observations are considered to be those with the validity
variable being \code{1} or missing (\code{NULL} or \code{NA}). This argument
will be set to \code{FALSE} if \code{set_invalid_values} is used.}

\item{set_invalid_values}{Should invalid observations be set to \code{NA}? 
See \code{\link{set_invalid_values}} for details and this argument will set
the \code{valid_only} argument to \code{FALSE}.}

\item{warn}{Should the functions raise warnings?}

\item{query_by_process}{Should observations be queried process by process? 
This will avoid sending large numbers of processes to the database within 
\code{IN} clauses.}

\item{tz}{Time zone for the dates to be parsed into. Default is \code{"UTC"}.}

\item{progress}{If \code{query_by_process} is \code{TRUE}, should a progress
bar be displayed?}

\item{add_extras}{Should extra variables be calculated and returned?}
}
\value{
Tibble.
}
\description{
Functions to import data from an extended sensors \strong{smonitor} database.
}
\seealso{
\link{import_by_process}
}
\author{
Stuart K. Grange
}
